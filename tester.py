import os, sys, time
import json
import firebase as fb
from xml.dom.minidom import parseString
import xlsxwriter , csv
import string
import re , operator
import glob , math



firebase = fb.FirebaseApplication("https://stalkersri-94d67.firebaseio.com/")
latitude = firebase.get('/Location/latitude', None)
longitude = firebase.get('Location/longitude',None)


latitude_list = [12.914142,13.010839,19.075984,40.712784,-25.274398,41.902916]
longitude_list = [74.855957,74.794310,72.877656,-74.005941,133.775136,12.453389]
# latitudes
# longitudes
#[mangaloreedge, nitw, mumbai, newyork, australia,vatican city]
geo_fence = list()
red_loc = list()

def test():
	for i in range(len(latitude_list)):
		firebase.put('/Location',"latitude", latitude_list[i])
		firebase.put('/Location', "longitude", longitude_list[i])
		time.sleep(3)
		geo_fence.append(firebase.get('Location/GenFence_status', None))
		red_loc.append(firebase.get('Location/In_redloc', None))	

test()

def results():
	geo_test = list()
	red_test = list()
	geo_actual = ['out', 'out', 'out', 'out', 'out', 'out']
	red_actual = ['out', 'out', 'out', 'out', 'out', 'out']
	for i in range(len(latitude_list)):
		if(geo_fence[i] == geo_actual[i]):
			geo_test.append("positive")
		else:
			geo_test.append("negative")
		if(red_loc[i] == red_actual[i]):
			red_test.append("positive")
		else:
			red_test.append("negative")
	return geo_test, red_test

geo_result, red_result = results()

print "The geolocation test results are:"
print geo_result
print "The redlocation test results are:"
print red_result

def read_data():
	with open(sys.argv[1] , "r") as f:
		reader = csv.reader(f)
		data = list(reader)
		return data


def score(data):	
	for j in range(0,len(data[1]) - 1):
		if(denominator[j] == 0):
			fscore[j] = float(-1)
		else:
			fscore[j] = numerator[j] / denominator[j]



def write_into_set(data,filename):
	samplist = list()
	for i in range(0,len(data[1]) - 1):
		samplist.append(str(fisher_score[i]))

	#print samplist
	with open(filename,"a") as f:
		f.writelines("\n")
		for sam in samplist:
			f.write(sam)
			f.write(",")
		